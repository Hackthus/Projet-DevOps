name: Devops Pipeline

on:
  push:
    branches:
      - "feature/*"
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14, 16, 18]
    steps:
      - name: Check repository
        uses: actions/checkout@v2

      - name: check version Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Installation dependencies
        run: npm install

      - name: Run unit tests
        run: npm test



  lint:

    name: lint code base
    runs-on: ubuntu-latest
    steps:
      - name: checkout the code
        uses: actions/checkout@v3

      - name: checkout the code
        uses: github/super-linter/slim@v4
        env:
          VALIDATE_ALL_CODEBASE: true
          GITHUB_TOKEN: ${{ secrets.SECRET_TOKEN }}

  semgrep:

    container:
      image: semgrep/semgrep:canary

    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - run: semgrep ci

  hadolint:

    name: hadolint scan
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - name: check the code
        uses: actions/checkout@v3

      - name: test hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: ./Dockerfile
          format: sarif
          output-file: hadolint-results.sarif

      - name: debug the code part 1
        if: always()
        run: |
          pwd
          ls

      - name: check results to GitHub
        uses: github/codeql-action/upload-sarif@v3

        if: always()
        with:
          sarif_file: hadolint-results.sarif
          wait-for-processing: true

      - name: debug the code part 2
        run: |
          pwd
          ls

  build_and_push:

    runs-on: ubuntu-latest
    steps:
      - name: Check repository
        uses: actions/checkout@v4

      - name:  Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/nodejsapp:latest .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/nodejsapp:latest

      - name: security-test Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKER_USERNAME }}/nodejsapp:latest
